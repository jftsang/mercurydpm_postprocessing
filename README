This directory contains a suite of MATLAB scripts and functions that are 
useful for the post-processing of data generated by MercuryDPM (as of 
verion 1.0, February 2016).

I also have a number of test files, which are the output of simple 
MercuryDPM runs (specifically, the UnitTests that come with MercuryDPM.)

mercury_load_data - load .data file produced by MercuryDPM
mercury_load_ene - load .ene file produced by MercuryDPM
mercury_get_kes - get KEs of individual particles from a 'data' struct as functions of time
mercury_load_restart - load a .restart file produced by MercuryDPM

There is a demonstration of these things in mercury_test. 
In particular, these functions are used to load the output of the demo code
'free_cooling', and my DMD script is used to analyse the history of particles'
kinetic energy.

Given the granular group's strategic interests, these functions should 
satisfy the following demands:
 - The code should be able to handle both 2d and 3d output from 
   MercuryDPM, and ideally should be able to distinguish between them 
   automatically. 
 - Internally, the code should use the same data structures for 2d as it 
   does for 3d. MercuryDPM does not use the same output format for 2d and 
   3d problems, but it is not that expensive to store an array of zeros 
   for the z-position and z-velocity of particles. 
 - The code should be able to hand polydisperse grains, with dispersity in
   size and density. Shape dispersity is less important, given that our 
   simulations will involve spherical (in 3d) or cylindrical (in 2d) 
   particles anyway.
 - Writing the code should soothe the pain of lovesickness.